version: '3.7'

networks:
  mynetwork:

services:
  postgres:
    container_name: 'postgres'
    image: postgres
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - mynetwork
    env_file:
      - ../.envs/postgres.env

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: on-failure
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mynetwork
    env_file:
      - ../.envs/rabbitmq.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    container_name: 'api-gateway'
    image: 'api-gateway'
    ports:
      - "7257:7257"
    networks:
      - mynetwork
    env_file:
      - ../.envs/api-gateway.env
  
  administration:
    container_name: 'administration'
    image: 'administration'
    ports:
      - "7086:7086"
    networks:
      - mynetwork
    depends_on:
      - "postgres"
      - "rabbitmq"
    env_file:
      - ../.envs/administration.env

  # invoicing:
  #   container_name: 'invoicing'
  #   image: 'invoicing'
  #   ports:
  #     - "7271:7271"
  #   networks:
  #     - mynetwork
  #   depends_on:
  #     - "postgres"
  #   env_file:
  #     - ../.envs/invoicing.env

  invoicing:
    container_name: 'invoicing-python'
    image: 'invoicing-python'
    ports:
      - "7271:7271"
    networks:
      - mynetwork
    entrypoint: python
    command: app.py
    depends_on:
      - "postgres"
      - "rabbitmq"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 10
        window: 60s
    stop_signal: SIGINT
    env_file:
      - ../.envs/invoicing-python.env
  invoicing-worker:
    container_name: 'invoicing-python-worker'
    image: 'invoicing-python'
    networks:
      - mynetwork
    entrypoint: celery
    command: -A make_celery worker --loglevel=info 
    depends_on:
      - "postgres"
      - "rabbitmq"
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 10
        window: 60s
    stop_signal: SIGINT
    env_file:
      - ../.envs/invoicing-python.env
  email-service:
    container_name: 'email-service'
    image: 'email-service'
    ports:
      - "7089:7089"
    networks:
      - mynetwork
    depends_on:
      - "rabbitmq"
    env_file:
      - ../.envs/email-service.env
      
  payments:
    container_name: 'payments'
    image: 'payments'
    ports:
      - "7239:7239"
    networks:
      - mynetwork
    depends_on:
      - "postgres"
      - "rabbitmq"
    env_file:
      - ../.envs/payments.env

  frontend:
    image: 'frontend'
    container_name: 'frontend'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
       - "80:80"
    networks:
      - mynetwork

volumes:
  db:
    external: false
